// Configuration pour le build
buildscript {
	ext {
		springBootVersion = '2.1.2.RELEASE'
	}

	repositories {
		mavenLocal()
		jcenter()
		mavenCentral()
	}
	dependencies {
		classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
	}
}

plugins {
	id 'com.jfrog.bintray' version '1.7.3' apply false
}

// Configuration de tous les projets
configure(allprojects) { project ->
	group = 'org.arig.robot'
	version = '1.1.0-SNAPSHOT'

	// Variable de configuration
	ext {
		// Project dependencies
		javaVersion = '1.8'
		javaTestVersion = javaVersion

		// Dependencies versions
		apacheCommonsCollectionsVersion = '4.2'
		apacheCommonsIOVersion = '2.6'
		googleGuavaVersion = '27.0.1-jre'
		pi4jVersion = '1.2-arig-SNAPSHOT'
		junixsocketVersion = '2.0.5-arig-SNAPSHOT'
		anyAnglePathFindingGitVersion = 'master-7b196baf6b-1'
		jFoenixVersion = '8.0.8'
		dataFxVersion = '8.0.1'
		fontAwesomeFxVersion = '4.7.0-5'
	}

	// Plugin de build
	apply plugin: 'java'
	apply plugin: 'jacoco'
	apply plugin: 'io.spring.dependency-management'

	dependencyManagement {
		imports {
			mavenBom "org.springframework.boot:spring-boot-dependencies:${springBootVersion}"
		}
	}

	// Version pour la compilation
	compileJava {
		sourceCompatibility = javaVersion
		targetCompatibility = javaVersion
	}

	compileTestJava {
		sourceCompatibility = javaTestVersion
		targetCompatibility = javaTestVersion
	}

	// Configuration des repository de dépendences
	repositories {
		mavenLocal()
		jcenter()
		mavenCentral()
		maven { url 'https://jitpack.io' }
		maven {
			url "http://archiva.picotteland.dtdns.net/repository/internal"
			credentials {
				username "guest"
				password "guest1"
			}
		}
		maven {
			url "http://archiva.picotteland.dtdns.net/repository/snapshots"
			credentials {
				username "guest"
				password "guest1"
			}
		}
	}

	// Dependence commune pour tous les projets
	dependencies {
		compile "org.projectlombok:lombok"

		compile 'org.springframework.boot:spring-boot-starter-webflux'

		testCompile 'org.springframework.boot:spring-boot-starter-test'
		testCompile 'io.projectreactor:reactor-test'
	}

	// JAvaCOCOverage
	jacocoTestReport {
		reports {
			xml.enabled = true // coveralls plugin depends on xml format report
			html.enabled = true
		}
	}
}

// Configuration communes des sous projets
configure(subprojects) { subproject ->

	// Configuration de la construction des Jars
	jar {
		manifest.attributes["Implementation-Title"] = subproject.name
		manifest.attributes["Implementation-Version"] = subproject.version
		manifest.attributes["Created-By"] = "Gradle " + gradle.gradleVersion
		manifest.attributes["Build-Jdk"] = "${System.getProperty("java.version")} (${System.getProperty("java.specification.vendor")})"
	}

	// Configuration pour la Javadoc
	javadoc {
		options {
			memberLevel = JavadocMemberLevel.PROTECTED
			author = true
			header = project.name
		}

		// Désactivation de la Javadoc strict avec le JDK 8
		if (JavaVersion.current().isJava8Compatible()) {
			options.addStringOption('Xdoclint:none', '-quiet')
		}
	}

	// Construction du jar de source
	task sourcesJar(type: Jar, dependsOn:classes) {
		classifier = "sources"
		from sourceSets.main.allJava.srcDirs
		include "**/*.java"
	}

	// Construction du jar de javadoc
	task javadocJar(type: Jar) {
		classifier = "javadoc"
		from javadoc
	}

	// Liste des artéfact
	artifacts {
		archives sourcesJar
		archives javadocJar
	}
}

// Configuration du projet racine
configure(rootProject) {
	description = "ARIG Association - Robots"

	// Suppression des artéfact par défaut sur le rootProject (jar, etc...)
	configurations.archives.artifacts.clear()

	task codeCoverageReport(type: JacocoReport) {
		executionData fileTree(project.rootDir.absolutePath).include("**/build/jacoco/*.exec")

		subprojects.each {
			sourceSets it.sourceSets.main
		}

		reports {
			xml.enabled true
			xml.destination file("${buildDir}/reports/jacoco/report.xml")
			html.enabled false
			csv.enabled false
		}
	}

	codeCoverageReport.dependsOn {
		subprojects*.test
	}

	wrapper {
		description = "Generates gradlew[.bat] scripts"
		gradleVersion = "4.10.2"
		distributionType = "all"
	}
}
