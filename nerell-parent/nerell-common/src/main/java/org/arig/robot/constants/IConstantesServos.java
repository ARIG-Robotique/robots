package org.arig.robot.constants;

import com.google.common.collect.ImmutableMap;
import org.apache.commons.lang3.tuple.Triple;

import java.util.Map;

/**
 * @author gdepuille on 21/12/14.
 */
public interface IConstantesServos {

    // Constantes de vitesse //
    // --------------------- //

    byte SPEED_SERRAGE_PALET = 0;
    byte SPEED_PIVOT_VENTOUSE = 0;
    byte SPEED_ASCENSEUR = 0;
    byte SPEED_PORTE_BARILLET = 0;
    byte SPEED_TRAPPE_MAGASIN = 0;
    byte SPEED_EJECTION_MAGASIN = 0;
    byte SPEED_POUSSE_ACCELERATEUR = 0;

    // Tempo servos //
    // ------------ //

    int WAIT_PINCE_SERRAGE_PALET = 1000;
    int WAIT_PIVOT_VENTOUSE = 1000;
    int WAIT_ASCENSEUR_VENTOUSE = 1500;
    int WAIT_PORTE_BARILLET = 1000;
    int WAIT_TRAPPE_MAGASIN = 1000;
    int WAIT_EJECTION_MAGASIN = 1000;
    int WAIT_POUSSE_ACCELERATEUR = 1000;

    // Constantes d'identification Servo //
    // --------------------------------- //

    byte MOTOR_CAROUSEL = 13;
    byte MOTOR_DROIT = 15;
    byte MOTOR_GAUCHE = 12;

    byte PINCE_SERRAGE_PALET_DROIT = 6;
    byte PINCE_SERRAGE_PALET_GAUCHE = 3;
    byte PIVOT_VENTOUSE_DROIT = 11;
    byte PIVOT_VENTOUSE_GAUCHE = 7;
    byte ASCENSEUR_VENTOUSE_DROIT = 19;
    byte ASCENSEUR_VENTOUSE_GAUCHE = 20;
    byte PORTE_BARILLET_DROIT = 21;
    byte PORTE_BARILLET_GAUCHE = 10;
    byte TRAPPE_MAGASIN_DROIT = 2;
    byte TRAPPE_MAGASIN_GAUCHE = 1;
    byte EJECTION_MAGASIN_DROIT = 8;
    byte EJECTION_MAGASIN_GAUCHE = 9;
    byte POUSSE_ACCELERATEUR_DROIT = 16;
    byte POUSSE_ACCELERATEUR_GAUCHE = 4;

    // Constantes de position //
    // ---------------------- //

    int PINCE_SERRAGE_PALET_DROIT_REPOS = 480;
    int PINCE_SERRAGE_PALET_DROIT_LOCK = 2250;

    int PINCE_SERRAGE_PALET_GAUCHE_REPOS = 2280;
    int PINCE_SERRAGE_PALET_GAUCHE_LOCK = 500;

    int PIVOT_VENTOUSE_DROIT_CAROUSEL_VERTICAL = 650;
    int PIVOT_VENTOUSE_DROIT_CAROUSEL_SORTIE = 1300;
    int PIVOT_VENTOUSE_DROIT_FACADE = 1500;
    int PIVOT_VENTOUSE_DROIT_TABLE = 2500;

    int PIVOT_VENTOUSE_GAUCHE_CAROUSEL_VERTICAL = 2480;
    int PIVOT_VENTOUSE_GAUCHE_CAROUSEL_SORTIE = 1780;
    int PIVOT_VENTOUSE_GAUCHE_FACADE = 1580;
    int PIVOT_VENTOUSE_GAUCHE_TABLE = 610;

    int ASCENSEUR_DROIT_CAROUSEL_DEPOSE = 610;
    int ASCENSEUR_DROIT_ACCELERATEUR_DEPOSE = 810;
    int ASCENSEUR_DROIT_CAROUSEL = 950;
    int ASCENSEUR_DROIT_GOLD = 1050;
    int ASCENSEUR_DROIT_ACCELERATEUR = 1210;
    int ASCENSEUR_DROIT_DISTRIBUTEUR = 1970;
    int ASCENSEUR_DROIT_TABLE_GOLD = 1870;
    int ASCENSEUR_DROIT_TABLE = 2150;

    int ASCENSEUR_GAUCHE_CAROUSEL_DEPOSE = 2220;
    int ASCENSEUR_GAUCHE_ACCELERATEUR_DEPOSE = 2020;
    int ASCENSEUR_GAUCHE_CAROUSEL = 1870;
    int ASCENSEUR_GAUCHE_GOLD = 1780;
    int ASCENSEUR_GAUCHE_ACCELERATEUR = 1610;
    int ASCENSEUR_GAUCHE_DISTRIBUTEUR = 850;
    int ASCENSEUR_GAUCHE_TABLE_GOLD = 910;
    int ASCENSEUR_GAUCHE_TABLE = 670;

    int PORTE_BARILLET_DROIT_OUVERT = 1200;
    int PORTE_BARILLET_DROIT_FERME = 2330;

    int PORTE_BARILLET_GAUCHE_OUVERT = 1760;
    int PORTE_BARILLET_GAUCHE_FERME = 620;

    int TRAPPE_MAGASIN_DROIT_OUVERT = 350;
    int TRAPPE_MAGASIN_DROIT_FERME = 1960;

    int TRAPPE_MAGASIN_GAUCHE_OUVERT = 2180;
    int TRAPPE_MAGASIN_GAUCHE_FERME = 590;

    int EJECTION_MAGASIN_DROIT_OUVERT = 900;
    int EJECTION_MAGASIN_DROIT_FERME = 2300;

    int EJECTION_MAGASIN_GAUCHE_OUVERT = 1900;
    int EJECTION_MAGASIN_GAUCHE_FERME = 600;

    int POUSSE_ACCELERATEUR_DROIT_FERME = 500;
    int POUSSE_ACCELERATEUR_DROIT_STANDBY = 1510;
    int POUSSE_ACCELERATEUR_DROIT_ACTION = 2250;

    int POUSSE_ACCELERATEUR_GAUCHE_FERME = 2250;
    int POUSSE_ACCELERATEUR_GAUCHE_STANDBY = 1280;
    int POUSSE_ACCELERATEUR_GAUCHE_ACTION = 540;

    Map<Byte, Triple<Integer, Integer, Integer>> MIN_TIME_MAX = ImmutableMap.<Byte, Triple<Integer, Integer, Integer>>builder()
            .put(ASCENSEUR_VENTOUSE_DROIT, Triple.of(ASCENSEUR_DROIT_CAROUSEL_DEPOSE, WAIT_ASCENSEUR_VENTOUSE, ASCENSEUR_DROIT_TABLE))
            .put(ASCENSEUR_VENTOUSE_GAUCHE, Triple.of(ASCENSEUR_GAUCHE_TABLE, WAIT_ASCENSEUR_VENTOUSE, ASCENSEUR_GAUCHE_CAROUSEL_DEPOSE))
            .put(PIVOT_VENTOUSE_DROIT, Triple.of(PIVOT_VENTOUSE_DROIT_CAROUSEL_VERTICAL, WAIT_PIVOT_VENTOUSE, PIVOT_VENTOUSE_DROIT_TABLE))
            .put(PIVOT_VENTOUSE_GAUCHE, Triple.of(PIVOT_VENTOUSE_GAUCHE_TABLE, WAIT_PIVOT_VENTOUSE, PIVOT_VENTOUSE_GAUCHE_CAROUSEL_VERTICAL))
            .put(PORTE_BARILLET_DROIT, Triple.of(PORTE_BARILLET_DROIT_OUVERT, WAIT_PORTE_BARILLET, PORTE_BARILLET_DROIT_FERME))
            .put(PORTE_BARILLET_GAUCHE, Triple.of(PORTE_BARILLET_GAUCHE_FERME, WAIT_PORTE_BARILLET, PORTE_BARILLET_GAUCHE_OUVERT))
            .put(TRAPPE_MAGASIN_DROIT, Triple.of(TRAPPE_MAGASIN_DROIT_OUVERT, WAIT_TRAPPE_MAGASIN, TRAPPE_MAGASIN_DROIT_FERME))
            .put(TRAPPE_MAGASIN_GAUCHE, Triple.of(TRAPPE_MAGASIN_GAUCHE_FERME, WAIT_TRAPPE_MAGASIN, TRAPPE_MAGASIN_GAUCHE_OUVERT))
            .put(PINCE_SERRAGE_PALET_DROIT, Triple.of(PINCE_SERRAGE_PALET_DROIT_REPOS, WAIT_PINCE_SERRAGE_PALET, PINCE_SERRAGE_PALET_DROIT_LOCK))
            .put(PINCE_SERRAGE_PALET_GAUCHE, Triple.of(PINCE_SERRAGE_PALET_GAUCHE_LOCK, WAIT_PINCE_SERRAGE_PALET, PINCE_SERRAGE_PALET_GAUCHE_REPOS))
            .put(EJECTION_MAGASIN_DROIT, Triple.of(EJECTION_MAGASIN_DROIT_OUVERT, WAIT_EJECTION_MAGASIN, EJECTION_MAGASIN_DROIT_FERME))
            .put(EJECTION_MAGASIN_GAUCHE, Triple.of(EJECTION_MAGASIN_GAUCHE_FERME, WAIT_EJECTION_MAGASIN, EJECTION_MAGASIN_GAUCHE_OUVERT))
            .put(POUSSE_ACCELERATEUR_DROIT, Triple.of(POUSSE_ACCELERATEUR_DROIT_FERME, WAIT_POUSSE_ACCELERATEUR, POUSSE_ACCELERATEUR_DROIT_ACTION))
            .put(POUSSE_ACCELERATEUR_GAUCHE, Triple.of(POUSSE_ACCELERATEUR_GAUCHE_ACTION, WAIT_POUSSE_ACCELERATEUR, POUSSE_ACCELERATEUR_GAUCHE_FERME))
            .build();
}
